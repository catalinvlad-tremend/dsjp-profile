<?php

/**
 * @file
 * Contains user_online_status.module.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\user_online_status\Form\UserOnlineStatusSettingsForm;

/**
 * Implements hook_help().
 */
function user_online_status_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {

    // Main module help for the user_online_status module.
    case 'help.page.user_online_status':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module shows information about the user current status i.e. Online/Offline on their respective profile/account page.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_entity_extra_field_info().
 */
function user_online_status_entity_extra_field_info() {

  $extra = [];

  $extra['user']['user']['display']['online_status'] = [
    'label' => t('Online Status'),
    'description' => t("Show the user's online status"),
    'weight' => 100,
    'visible' => TRUE,
  ];

  return $extra;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function user_online_status_user_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {

  if ($display->getComponent('online_status')) {

    $settings = \Drupal::config(UserOnlineStatusSettingsForm::USER_ONLINE_STATUS_SETTINGS);

    $build['online_status'] = [
      '#theme' => 'user_online_status',
      '#label' => t('Online Status'),
      '#label_display' => 'inline',
      '#uid' => $entity->id(),
      '#view_mode' => $view_mode,
      '#attached' => [
        'library' => 'user_online_status/user_online_status',
        'drupalSettings' => [
          'user_online_status' => [
            'classes' => [
              'online' => $settings->get('css_classes_online'),
              'absent' => $settings->get('css_classes_absent'),
              'offline' => $settings->get('css_classes_offline'),
            ],
          ],
        ],
      ],
    ];
  }
}

/**
 * Implements hook_theme().
 */
function user_online_status_theme($existing, $type, $theme, $path) {

  return [
    'user_online_status' => [
      'variables' => [
        'label' => NULL,
        'label_display' => NULL,
        'uid' => NULL,
        'view_mode' => NULL,
        'view' => NULL,
        'current_display' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function user_online_status_theme_suggestions_user_online_status(array $variables) {

  $suggestions = [];
  $suggestions[] = $variables['theme_hook_original'] . '__' . $variables['view_mode'];

  if ($variables['view_mode'] === 'views_field') {
    $suggestions[] = $variables['theme_hook_original'] . '__' . $variables['view_mode'] . '__' . $variables['view'];
    $suggestions[] = $variables['theme_hook_original'] . '__' . $variables['view_mode'] . '__' . $variables['view'] . '__' . $variables['current_display'];
  }

  return $suggestions;
}
